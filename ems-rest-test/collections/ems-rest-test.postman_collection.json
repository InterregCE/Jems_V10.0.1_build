{
	"info": {
		"_postman_id": "610e5e39-8b28-41a5-875c-9b85e1f82e9c",
		"name": "ems-rest-test",
		"description": "Check creation of Project Application",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "project-entity",
			"item": [
				{
					"name": "test project application retrieval 1",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "1c15a973-c7bd-4c1d-a0a8-576190df4b9a",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "a7cd9b4c-b6e4-4207-b5af-b9ab40a6808a",
								"exec": [
									"const response = pm.response.json()\r",
									"\r",
									"pm.test(\"list can be retrieved\", function () {\r",
									"    pm.expect(response.totalElements).to.be.a('number');\r",
									"    pm.variables.set(\"totalCount\", response.totalElements);\r",
									"})\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/api/project",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"project"
							]
						}
					},
					"response": []
				},
				{
					"name": "create project application - invalid data",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "26a8f7a0-69f7-4e4a-99e9-792d9e33a87d",
								"exec": [
									"pm.variables.set('project_acronym', \"test-proj-this-is-a-very-long-name\");\r",
									"\r",
									"var date = new Date();\r",
									"date.setDate(date.getDate() - 2);\r",
									"pm.variables.set('project_submissionDate', date.toISOString().split('T')[0]);\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "6edd7af7-fbdd-4918-8347-ea82ef9c6c29",
								"exec": [
									"pm.test('should fail with 400', function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test('should return validation errors', function () {\r",
									"    const response = pm.response.json();\r",
									"    pm.expect(response.i18nFieldErrors.acronym.i18nKey).to.contain('project.acronym.size.too.long');\r",
									"\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"acronym\": \"{{project_acronym}}\",\n\t\"submissionDate\": \"{{project_submissionDate}}\"\n}"
						},
						"url": {
							"raw": "{{url}}/api/project",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"project"
							]
						}
					},
					"response": []
				},
				{
					"name": "create project application - empty",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "8c82a2ed-9318-4907-86b8-24bf346bcc14",
								"exec": [
									"pm.variables.set('project_acronym', \"\");\r",
									"pm.variables.set('project_submissionDate', \"\");\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "d75ed47f-e02c-4262-a6a1-c1136cb67e7c",
								"exec": [
									"pm.test('should fail with 400', function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test('should return validation errors', function () {\r",
									"    const response = pm.response.json();\r",
									"    pm.expect(response.i18nFieldErrors.submissionDate.i18nKey).to.contain('project.submissionDate.should.not.be.empty');\r",
									"    pm.expect(response.i18nFieldErrors.acronym.i18nKey).to.contain('project.acronym.should.not.be.empty');\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"acronym\": \"{{project_acronym}}\",\n\t\"submissionDate\": \"{{project_submissionDate}}\"\n}"
						},
						"url": {
							"raw": "{{url}}/api/project",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"project"
							]
						}
					},
					"response": []
				},
				{
					"name": "create project application - OK",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "2127d661-63e4-449b-9309-cf6bcdd4ae12",
								"exec": [
									"var uuid = require('uuid');\r",
									"const randomIdentifier = uuid.v4().substring(24, 32);\r",
									"pm.variables.set('project_acronym', \"test-proj-\" + randomIdentifier);\r",
									"\r",
									"var date = new Date();\r",
									"date.setDate(date.getDate() + 2);\r",
									"pm.variables.set('project_submissionDate', date.toISOString().split('T')[0]);\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "b953ac7d-62dc-4720-b802-3297faa910e7",
								"exec": [
									"pm.test('should be OK', function() {\r",
									"    pm.response.to.have.status(200);\r",
									"    pm.environment.set(\"projectId\", pm.response.json().id)\r",
									"    pm.variables.set(\"projectAcronym\", pm.response.json().acronym)\r",
									"    pm.variables.set(\"projectSubmissionDate\", pm.response.json().submissionDate)\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"acronym\": \"{{project_acronym}}\",\n\t\"submissionDate\": \"{{project_submissionDate}}\"\n}"
						},
						"url": {
							"raw": "{{url}}/api/project",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"project"
							]
						}
					},
					"response": []
				},
				{
					"name": "test project application retrieval 2",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "ada081db-043a-4302-aa2e-77e45d63ecc6",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "fca2083f-e901-4844-ba07-4f8c0c38d586",
								"exec": [
									"const response = pm.response.json();\r",
									"\r",
									"pm.test(\"modified list can be retrieved\", function () {\r",
									"    pm.expect(response.totalElements).to.be.a('number');\r",
									"\r",
									"    const totalAmountBefore = pm.variables.get(\"totalCount\");\r",
									"    pm.expect(response.totalElements).to.equal(totalAmountBefore + 1);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/api/project",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"project"
							]
						}
					},
					"response": []
				},
				{
					"name": "test project application retrieval by id 1",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "df089526-fe44-40fd-8218-29ef33cfe5f8",
								"exec": [
									"const response = pm.response.json();\r",
									"const id = pm.variables.get(\"projectId\")\r",
									"const acronym = pm.variables.get(\"projectAcronym\")\r",
									"const submissionDate = pm.variables.get(\"projectSubmissionDate\")\r",
									"\r",
									"pm.test(\"one project can be retrieved\", function () {\r",
									"    pm.expect(response.id).to.equal(id);\r",
									"    pm.expect(response.acronym).to.equal(acronym);\r",
									"    pm.expect(response.submissionDate).to.equal(submissionDate);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/api/project/{{projectId}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"project",
								"{{projectId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "test project application retrieval by Id - invalid id",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "fe5c0d98-1133-47a8-8b9e-92603faca74c",
								"exec": [
									"pm.environment.set(\"projectIdInvalid\", '-1')"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "bdb9061d-c6fb-4441-a413-2781cf315ad2",
								"exec": [
									"pm.test(\"an invalid project returns 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/api/project/{{projectIdInvalid}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"project",
								"{{projectIdInvalid}}"
							]
						}
					},
					"response": []
				}
			],
			"auth": {
				"type": "basic",
				"basic": [
					{
						"key": "password",
						"value": "Adm1",
						"type": "string"
					},
					{
						"key": "username",
						"value": "admin",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "c223171d-b7d7-4aba-96aa-d5776c02a2ee",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "4920f0cb-3cbd-4199-a30b-e3e8c50b39d1",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "user",
			"item": [
				{
					"name": "login-admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3637160a-4a1c-48d6-9322-f847a0f5b20f",
								"exec": [
									"const response = pm.response.json()",
									"",
									"pm.test(\"admin can login\", function () {",
									"    pm.response.to.have.status(200);",
									"    pm.expect(response.name).to.contain('admin');",
									"    pm.expect(pm.cookies.has('JSESSIONID')).to.be.true;",
									"})",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "Adm1",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [],
							"options": {
								"urlencoded": {}
							}
						},
						"url": {
							"raw": "{{url}}/api/auth/current",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"auth",
								"current"
							]
						}
					},
					"response": []
				},
				{
					"name": "check access to project with cookie",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f9205cf2-c0bc-4679-8ef2-98bb0b85cdbd",
								"exec": [
									"pm.test(\"logged-in user can access system\", function () {",
									"    pm.response.to.have.status(200);",
									"})",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [],
							"options": {
								"urlencoded": {}
							}
						},
						"url": {
							"raw": "{{url}}/api/project?sort=id,desc",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"project"
							],
							"query": [
								{
									"key": "sort",
									"value": "id,desc"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "logout",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "762153c5-2508-487c-8b25-04ee3afe3aaa",
								"exec": [
									"pm.test(\"user can logout\", function () {",
									"    pm.response.to.have.status(200);",
									"})",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{url}}/api/auth/logout",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"auth",
								"logout"
							]
						}
					},
					"response": []
				},
				{
					"name": "check access to project with invalid cookie",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "29cc4ea1-00bd-4d26-a33f-9de7943fd95c",
								"exec": [
									"pm.test(\"logged-out user cannot access system\", function () {",
									"    pm.response.to.have.status(401);",
									"})",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [],
							"options": {
								"urlencoded": {}
							}
						},
						"url": {
							"raw": "{{url}}/api/project?sort=id,desc",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"project"
							],
							"query": [
								{
									"key": "sort",
									"value": "id,desc"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "login-wrong-user",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "581c9c2d-de0c-40a8-bf07-f9e4269e1468",
								"exec": [
									"pm.test(\"wrong user cannot login\", function () {",
									"    pm.response.to.have.status(401);",
									"})",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "wrongpwd",
									"type": "string"
								},
								{
									"key": "username",
									"value": "wronguser",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "username",
									"value": "admin",
									"type": "text"
								},
								{
									"key": "password",
									"value": "Adm12",
									"type": "text"
								}
							],
							"options": {
								"urlencoded": {}
							}
						},
						"url": {
							"raw": "{{url}}/api/auth/current",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"auth",
								"current"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		}
	],
	"auth": {
		"type": "basic",
		"basic": [
			{
				"key": "password",
				"value": "Adm1",
				"type": "string"
			},
			{
				"key": "username",
				"value": "admin",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "3e09d09a-c850-4057-b38c-49f78714cafe",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "ca445bda-dcae-4eb8-bb97-2716c2ffc96a",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"id": "b9ddb6ce-828b-4241-b813-c7db61f93783",
			"key": "url",
			"value": "specify_url_here",
			"type": "string"
		}
	],
	"protocolProfileBehavior": {}
}