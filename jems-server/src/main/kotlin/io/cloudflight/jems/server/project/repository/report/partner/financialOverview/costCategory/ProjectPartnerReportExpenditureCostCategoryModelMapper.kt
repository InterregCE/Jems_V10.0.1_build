package io.cloudflight.jems.server.project.repository.report.partner.financialOverview.costCategory

import io.cloudflight.jems.server.project.entity.report.partner.financialOverview.ReportProjectPartnerExpenditureCostCategoryEntity
import io.cloudflight.jems.server.project.service.budget.model.BudgetCostsCalculationResultFull
import io.cloudflight.jems.server.project.service.partner.model.ProjectPartnerBudgetOptions
import io.cloudflight.jems.server.project.service.report.model.partner.financialOverview.costCategory.ReportExpenditureCostCategory
import java.math.BigDecimal

fun ReportProjectPartnerExpenditureCostCategoryEntity.toModel() = ReportExpenditureCostCategory(
    options = ProjectPartnerBudgetOptions(
        partnerId = reportEntity.partnerId,
        officeAndAdministrationOnStaffCostsFlatRate = officeAndAdministrationOnStaffCostsFlatRate,
        officeAndAdministrationOnDirectCostsFlatRate = officeAndAdministrationOnDirectCostsFlatRate,
        travelAndAccommodationOnStaffCostsFlatRate = travelAndAccommodationOnStaffCostsFlatRate,
        staffCostsFlatRate = staffCostsFlatRate,
        otherCostsOnStaffCostsFlatRate = otherCostsOnStaffCostsFlatRate,
    ),
    totalsFromAF = BudgetCostsCalculationResultFull(
        staff = staffTotal,
        office = officeTotal,
        travel = travelTotal,
        external = externalTotal,
        equipment = equipmentTotal,
        infrastructure = infrastructureTotal,
        other = otherTotal,
        lumpSum = lumpSumTotal,
        unitCost = unitCostTotal,
        spfCost = spfCostTotal,
        sum = sumTotal,
    ),
    currentlyReported = BudgetCostsCalculationResultFull(
        staff = staffCurrent,
        office = officeCurrent,
        travel = travelCurrent,
        external = externalCurrent,
        equipment = equipmentCurrent,
        infrastructure = infrastructureCurrent,
        other = otherCurrent,
        lumpSum = lumpSumCurrent,
        unitCost = unitCostCurrent,
        spfCost = spfCostCurrent,
        sum = sumCurrent,
    ),
    currentlyReportedParked = BudgetCostsCalculationResultFull(
        staff = staffCurrentParked,
        office = officeCurrentParked,
        travel = travelCurrentParked,
        external = externalCurrentParked,
        equipment = equipmentCurrentParked,
        infrastructure = infrastructureCurrentParked,
        other = otherCurrentParked,
        lumpSum = lumpSumCurrentParked,
        unitCost = unitCostCurrentParked,
        spfCost = spfCostCurrentParked,
        sum = sumCurrentParked,
    ),
    currentlyReportedReIncluded = BudgetCostsCalculationResultFull(
        staff = staffCurrentReIncluded,
        office = officeCurrentReIncluded,
        travel = travelCurrentReIncluded,
        external = externalCurrentReIncluded,
        equipment = equipmentCurrentReIncluded,
        infrastructure = infrastructureCurrentReIncluded,
        other = otherCurrentReIncluded,
        lumpSum = lumpSumCurrentReIncluded,
        unitCost = unitCostCurrentReIncluded,
        spfCost = spfCostCurrentReIncluded,
        sum = sumCurrentReIncluded,
    ),
    totalEligibleAfterControl = BudgetCostsCalculationResultFull(
        staff = staffTotalEligibleAfterControl,
        office = officeTotalEligibleAfterControl,
        travel = travelTotalEligibleAfterControl,
        external = externalTotalEligibleAfterControl,
        equipment = equipmentTotalEligibleAfterControl,
        infrastructure = infrastructureTotalEligibleAfterControl,
        other = otherTotalEligibleAfterControl,
        lumpSum = lumpSumTotalEligibleAfterControl,
        unitCost = unitCostTotalEligibleAfterControl,
        spfCost = spfCostTotalEligibleAfterControl,
        sum = sumTotalEligibleAfterControl,
    ),
    previouslyReported = BudgetCostsCalculationResultFull(
        staff = staffPreviouslyReported,
        office = officePreviouslyReported,
        travel = travelPreviouslyReported,
        external = externalPreviouslyReported,
        equipment = equipmentPreviouslyReported,
        infrastructure = infrastructurePreviouslyReported,
        other = otherPreviouslyReported,
        lumpSum = lumpSumPreviouslyReported,
        unitCost = unitCostPreviouslyReported,
        spfCost = spfCostPreviouslyReported,
        sum = sumPreviouslyReported,
    ),
    previouslyValidated = BudgetCostsCalculationResultFull(
        staff = staffPreviouslyValidated,
        office = officePreviouslyValidated,
        travel = travelPreviouslyValidated,
        external = externalPreviouslyValidated,
        equipment = equipmentPreviouslyValidated,
        infrastructure = infrastructurePreviouslyValidated,
        other = otherPreviouslyValidated,
        lumpSum = lumpSumPreviouslyValidated,
        unitCost = unitCostPreviouslyValidated,
        spfCost = spfCostPreviouslyValidated,
        sum = sumPreviouslyValidated,
    ),
    previouslyReportedParked = BudgetCostsCalculationResultFull(
        staff = staffPreviouslyReportedParked,
        office = officePreviouslyReportedParked,
        travel = travelPreviouslyReportedParked,
        external = externalPreviouslyReportedParked,
        equipment = equipmentPreviouslyReportedParked,
        infrastructure = infrastructurePreviouslyReportedParked,
        other = otherPreviouslyReportedParked,
        lumpSum = lumpSumPreviouslyReportedParked,
        unitCost = unitCostPreviouslyReportedParked,
        spfCost = spfCostPreviouslyReportedParked,
        sum = sumPreviouslyReportedParked,
    ),
)

fun ReportProjectPartnerExpenditureCostCategoryEntity.toBudgetOptionsModel() = ProjectPartnerBudgetOptions(
    partnerId = reportEntity.partnerId,
    officeAndAdministrationOnStaffCostsFlatRate = officeAndAdministrationOnStaffCostsFlatRate,
    officeAndAdministrationOnDirectCostsFlatRate = officeAndAdministrationOnDirectCostsFlatRate,
    travelAndAccommodationOnStaffCostsFlatRate = travelAndAccommodationOnStaffCostsFlatRate,
    staffCostsFlatRate = staffCostsFlatRate,
    otherCostsOnStaffCostsFlatRate = otherCostsOnStaffCostsFlatRate
)
