apply plugin: 'kotlin-jpa'

configurations {
    toDownload
}

dependencies {
    // load from nexus
    implementation('io.cloudflight.jems.plugin.contract:jems-plugin-contract')
    // load for local development (if projects are cloned in same root as jems)
    // implementation files("../../jems-plugin-interface/build/libs/jems-plugin-contract-$jemsPluginContractVersion-SNAPSHOT.jar")
    // implementation files("../../jems-default-plugin/build/libs/jems-standard-plugin-$jemsStandardPluginVersion-SNAPSHOT.jar")

    toDownload('io.cloudflight.jems.plugin.standard:jems-standard-plugin')

    implementation project(':jems-api')
    implementation project(':jems-ui')

    implementation('io.cloudflight.platform.spring:platform-spring-i18n')
    // platform-server-config is used for enabling built-in spring-actuators and to extract version details during build
    implementation('io.cloudflight.platform.spring:platform-spring-server-config')

    runtimeOnly('io.cloudflight.platform.spring:platform-spring-json')
    runtimeOnly('org.flywaydb:flyway-core')
    runtimeOnly('org.flywaydb:flyway-mysql')

    implementation('org.springframework.boot:spring-boot-actuator')
    implementation('org.springframework.boot:spring-boot-devtools')
    implementation('org.springframework.boot:spring-boot-starter-security')
    implementation('org.springframework.boot:spring-boot-starter-web')
    implementation('io.cloudflight.platform.spring:platform-spring-jpa')
    kapt('io.cloudflight.platform.spring:platform-spring-jpa')
    implementation('com.querydsl:querydsl-jpa')
    kapt('com.querydsl:querydsl-apt::jpa')
    implementation('org.springframework.boot:spring-boot-starter-validation')
    implementation 'org.springframework.boot:spring-boot-starter-aop'
    implementation 'org.springframework.retry:spring-retry'

    implementation('com.fasterxml.jackson.datatype:jackson-datatype-jsr310')
    implementation('org.mariadb.jdbc:mariadb-java-client')

    // Elasticsearch Java API Client
    implementation('co.elastic.clients:elasticsearch-java')

    implementation('commons-io:commons-io')
    implementation('io.minio:minio')
    implementation('com.github.doyaaaaaken:kotlin-csv-jvm')
    implementation('com.vladmihalcea:hibernate-types-55')
    implementation('com.google.code.gson:gson')
    implementation('org.hibernate:hibernate-core')
    implementation('io.springfox:springfox-swagger-ui')
    implementation('io.springfox:springfox-swagger2')
    implementation('org.mapstruct:mapstruct')
    implementation('io.imunity.simplecaptcha:simplecaptcha')
    kapt('org.mapstruct:mapstruct-processor')

    implementation('org.springframework.boot:spring-boot-starter-mail')
    implementation('org.springframework.boot:spring-boot-starter-thymeleaf')

    testImplementation 'io.cloudflight.platform.spring:platform-spring-test'
    testImplementation 'io.cloudflight.platform.spring:platform-spring-test-jpa'
    testImplementation 'io.cloudflight.platform.spring:platform-spring-test-testcontainers'
    testImplementation 'com.playtika.testcontainers:embedded-mariadb'

    constraints {
        implementation('commons-io:commons-io:2.8.0')
        implementation("com.vladmihalcea:hibernate-types-55:2.14.0")
        implementation('io.minio:minio:8.3.0')
        implementation('org.mariadb.jdbc:mariadb-java-client:3.1.2')
        implementation('io.springfox:springfox-swagger-ui:2.9.2')
        implementation('io.springfox:springfox-swagger2:2.9.2')
        implementation('co.elastic.clients:elasticsearch-java:8.6.2')
        implementation('io.imunity.simplecaptcha:simplecaptcha:1.3.0')
        implementation("io.cloudflight.jems.plugin.contract:jems-plugin-contract:$jemsPluginContractVersion")
        toDownload("io.cloudflight.jems.plugin.standard:jems-standard-plugin:$jemsStandardPluginVersion")
    }
}



tasks.register('download', Copy) {
    from configurations.toDownload
    into 'build/libs/'
    include "jems-standard-plugin*.jar"
}

build.dependsOn download
